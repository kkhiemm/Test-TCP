using System;
using System.Collections.Generic;
using System.IO;
using System.IO.Compression;
using System.Linq;
using System.Net.Http;
using System.Net.Sockets;
using System.Text;
using System.Threading.Tasks;

namespace Test_TCP
{
	class Program
	{
		static async Task Main(string[] args)
		{
			Console.WriteLine("Starting...");
			var dataList = new List<string>
			{
				// 864292043521176
				// codec 8
				"000f383634323932303433353231313736000000000000003608010000016b40d8ea30010000000000000000000000000000000105021503010101425e0f01f10000601a014e0000000000000000010000c7cf",
				// codec 8e
				// "000f383634323932303433353231313736000000000000049b8e0c0000017d31f8d5b800566c31f2e9663710001a008209000700000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000500b60004004231ed0018000700430f4b00440000000200f10000c5450010000a7f2e000000000000017d31f971f800566c319ee966369c0019008c08000000000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000500b60004004231ee0018000000430f4b00440000000200f10000c5450010000a7f2e000000000000017d31fa0e3800566c3277e9663454000f013c07000500000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000600b60005004231ee0018000500430f4b00440000000200f10000c5450010000a7f3e000000000000017d31fa44e800566c3360e96637000012008406000600000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000800b60007004231f00018000600430f4b00440000000200f10000c5450010000a7f46000000000000017d31fabe0000566c316ce9663486001c009807000700000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000a00b60007004231ee0018000700430f4b00440000000200f10000c5450010000a7f4d000000000000017d31faf0c800566c301fe9663638001d015b08000700000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000500b60004004231fe0018000700430f4b00440000000200f10000c5450010000a7f58000000000000017d31fb006800566c2ed2e966382c001f014207000800000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000600b60005004231d50018000800430f4b00440000000200f10000c5450010000a7f5e000000000000017d31fb7d6800566c2eb0e96639ab001d015608000600000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000500b60004004231db0018000600430f4b00440000000200f10000c5450010000a7f6b000000000000017d31fbc7a000566c3234e96639ab001b000808000600000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000900b60005004231f80018000600430f4b00440000000200f10000c5450010000a7f76000000000000017d31fbfa6800566c3108e966355f001900b207000a00000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000600b60005004231c20018000a00430f4b00440000000200f10000c5450010000a7f82000000000000017d31fbfe5000566c3108e96634440018009c07000a00000010000800ef0100f00100150400c80000450100010101f10001f200000600b5000600b60005004231c30018000900430f4b00440000000200f10000c5450010000a7f85000000000000017d31fd699800566c318ee966354e0011008f08000700000010000800ef0100f00100150500c80000450100010101f10001f200000600b5000500b60004004231700018000700430fd80044008d000200f10000c5450010000a7f90000000000c00000000"
			};
			foreach (var e in dataList)
			{
				PingWithTcpClient(e);
			}
			Console.WriteLine("Done.");
		}

		static void PingWithTcpClient(string data)
		{
			using var tcpClient = new TcpClient("127.0.0.1", port: 1207);
			if (tcpClient.Connected)
			{
				Console.WriteLine("Connected.");
				var result = tcpClient.Client.Send(StringToByteArray(data));
				Console.WriteLine(result);
			}
			else
			{
				Console.WriteLine("Connect error.");
			}
		}

		public static byte[] StringToByteArray(string hex)
		{
			return Enumerable.Range(0, hex.Length)
				.Where(x => x % 2 == 0)
				.Select(x => Convert.ToByte(hex.Substring(x, 2), 16))
				.ToArray();
		}
	}
}
